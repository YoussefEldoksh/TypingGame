/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.DataBase;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import jdk.jfr.DataAmount;

/**
 *
 * @author Lenovo
 */
public class MainPage extends javax.swing.JFrame {

    /**
     * Creates new form MainPabge
     */
    int typed = 0;
    String Passage;
    char[] typedPassage;

    public MainPage() {
        initComponents();
        this.setTitle("Typing Test");
        TextArea.setEditable(false);
        ResultArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextPane();
        ProgressBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultArea = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 76, 122));

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TextArea.setFont(new java.awt.Font("Segoe UI Semibold", 1, 16)); // NOI18N
        TextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextAreaKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(TextArea);

        ProgressBar.setForeground(new java.awt.Color(51, 153, 255));
        ProgressBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ProgressBarStateChanged(evt);
            }
        });

        ResultArea.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(ResultArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        typed = 0;

        ArrayList<String> values = new ArrayList<>(DataBase.getInstance().getPassages().values());

        Random randompassage = new Random();

        int maxLineLength = 100;
        int randomIndex = randompassage.nextInt(values.size());

        this.Passage = values.get(randomIndex);

        this.typedPassage = new char[Passage.toCharArray().length];

        String[] passage = values.get(randomIndex).split(" ");
        StringBuilder formattedPassage = new StringBuilder();
        StringBuilder line = new StringBuilder();
        for (String word : passage) {
            if (line.length() + word.length() + 1 > maxLineLength) {
                formattedPassage.append(line.toString().trim()).append("\n");
                line = new StringBuilder();
            }

            line.append(word).append(" ");
        }
        TextArea.enable();
        TextArea.setText(formattedPassage.toString());
        TextArea.requestFocusInWindow();
        iterate();

    }//GEN-LAST:event_jButton1ActionPerformed

    public void iterate() {
        // Create a SwingWorker to handle the background task
        SwingWorker<Void, Integer> worker = new SwingWorker<Void, Integer>() {

            @Override
            protected Void doInBackground() throws Exception {
                long startTime = System.currentTimeMillis();  // Record the start time
                int maxProgress = ProgressBar.getMaximum();   // Get maximum value for the progress bar
                int progress = 0;

                // Continue for 30 seconds
                while (System.currentTimeMillis() - startTime < 30000) {
                    // Update the progress
                    progress = (int) ((System.currentTimeMillis() - startTime) / 300);
                    if (progress <= maxProgress) {
                        publish(progress);
                    }
                    try {
                        Thread.sleep(1);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                ProgressBar.setValue(progress);
            }

            @Override
            protected void done() {
                try {
                    get();
                    Double result = (typed / 5) * (60 / 30)*1.0;
                    ResultArea.setText("Words Per Minute: "+result.toString());  // Convert result to a string
                    TextArea.disable();
                    System.out.println("Task completed");

                } catch (InterruptedException | ExecutionException ex) {
                    ex.printStackTrace();
                }
            }
        };

        worker.execute();

    }


    private void TextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextAreaKeyTyped
        // TODO add your handling code here:
        if (Passage.length() > 1) {
            char[] pass = Passage.toCharArray();
            StyledDocument doc = TextArea.getStyledDocument();
            if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE) {
                try {
                    int position = typed - 1;
                    if (position >= 0) {
                        typed--;

                        SimpleAttributeSet blackColor = new SimpleAttributeSet();
                        StyleConstants.setForeground(blackColor, Color.BLACK);

                        doc.remove(position, 1);

                        doc.insertString(position, String.valueOf(pass[position]), blackColor);
                    }

                } catch (BadLocationException ex) {
                    Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (typed < pass.length) {
                if (pass[typed] == evt.getKeyChar()) {
                    SimpleAttributeSet greenColor = new SimpleAttributeSet();
                    StyleConstants.setForeground(greenColor, Color.GREEN);

                    try {
                        doc.remove(typed, 1);
                        doc.insertString(typed, String.valueOf(pass[typed]), greenColor);
                        typed++;
                    } catch (BadLocationException e) {
                        e.printStackTrace();
                    }

                    System.out.println(typed);

                } else {
                    SimpleAttributeSet redColor = new SimpleAttributeSet();
                    StyleConstants.setForeground(redColor, Color.RED);

                    try {
                        doc.remove(typed, 1);
                        doc.insertString(typed, String.valueOf(pass[typed]), redColor);
                        typed++;
                    } catch (BadLocationException e) {

                        e.printStackTrace();
                    }
                }
            }
        }


    }//GEN-LAST:event_TextAreaKeyTyped

    private void ProgressBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ProgressBarStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_ProgressBarStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JTextPane ResultArea;
    private javax.swing.JTextPane TextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
